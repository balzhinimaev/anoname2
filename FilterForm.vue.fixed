<template>
  <div class="filter-form card p-4">
    <h2 class="text-center mb-4">Поиск собеседника</h2>
    
    <div class="mb-4">
      <label class="form-label">Ваш пол:</label>
      <div class="d-flex gap-2">
        <button 
          v-for="gender in genders" 
          :key="gender.value"
          class="btn flex-grow-1"
          :class="[userGender === gender.value ? 'btn-primary' : 'btn-outline-primary']"
          @click="userGender = gender.value"
        >
          {{ gender.label }}
        </button>
      </div>
    </div>

    <div class="mb-4">
      <label class="form-label">Пол собеседника:</label>
      <div class="d-flex gap-2">
        <button 
          v-for="gender in genders" 
          :key="gender.value"
          class="btn flex-grow-1"
          :class="[partnerGender === gender.value ? 'btn-primary' : 'btn-outline-primary']"
          @click="partnerGender = gender.value"
        >
          {{ gender.label }}
        </button>
      </div>
    </div>

    <div class="row mb-4">
      <div class="col-6">
        <label class="form-label">Ваш возраст:</label>
        <div class="d-flex flex-column gap-2">
          <button 
            v-for="age in ageRanges" 
            :key="age.value"
            class="btn"
            :class="[userAge === age.value ? 'btn-primary' : 'btn-outline-primary']"
            @click="userAge = age.value"
          >
            {{ age.label }}
          </button>
        </div>
      </div>
      <div class="col-6">
        <label class="form-label">Возраст собеседника:</label>
        <div class="d-flex flex-column gap-2">
          <button 
            v-for="age in ageRanges" 
            :key="age.value"
            class="btn"
            :class="[partnerAge === age.value ? 'btn-primary' : 'btn-outline-primary']"
            @click="partnerAge = age.value"
          >
            {{ age.label }}
          </button>
        </div>
      </div>
    </div>

    <div class="form-check mb-4">
      <input 
        type="checkbox" 
        class="form-check-input" 
        id="nearbyCheck"
        v-model="findNearby"
      >
      <label class="form-check-label" for="nearbyCheck">
        Поиск ближайшего собеседника
      </label>
    </div>

    <button class="btn btn-telegram w-100" @click="startSearch">
      Начать поиск
    </button>
  </div>
</template>

<script setup lang="ts">
import { ref } from '#imports'

const genders = [
  { value: 'male', label: 'Мужской' },
  { value: 'female', label: 'Женский' },
  { value: 'any', label: 'Аноним' }
]

const ageRanges = [
  { value: '18-21', label: 'от 18 до 21 года' },
  { value: '22-25', label: 'от 22 до 25 лет' },
  { value: '26+', label: 'от 26 и старше' }
]

const userGender = ref('male')
const partnerGender = ref('female')
const userAge = ref('18-21')
const partnerAge = ref('18-21')
const findNearby = ref(false)

interface SearchParams {
  userGender: string
  partnerGender: string
  userAge: string
  partnerAge: string
  findNearby: boolean
}

// Fixed emit definition to resolve Vetur error
const emit = defineEmits<{
  search: [params: SearchParams]
}>()

function startSearch() {
  const params: SearchParams = {
    userGender: userGender.value,
    partnerGender: partnerGender.value,
    userAge: userAge.value,
    partnerAge: partnerAge.value,
    findNearby: findNearby.value
  }
  emit('search', params)
}
</script>

<style lang="scss" scoped>
@import '@/assets/scss/variables';

.filter-form {
  background: white;
  max-width: 600px;
  margin: 0 auto;
}

.btn-outline-primary {
  &:hover {
    background-color: $primary;
    border-color: $primary;
  }
}
</style>
